[{"/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/App.js":"1","/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/components/Form.js":"2","/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/components/CartList.js":"3"},{"size":3865,"mtime":1607331517070,"results":"4","hashOfConfig":"5"},{"size":4041,"mtime":1607331517072,"results":"6","hashOfConfig":"5"},{"size":553,"mtime":1607331517071,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10","usedDeprecatedRules":"11"},"15uanun",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/App.js",["16"],"import React, { useState, useEffect } from \"react\";\nimport { getData, getBeers, postOrder } from \"./modules/Rest\";\nimport Home from \"./pages/Home\";\nimport Shop from \"./pages/Shop\";\nimport Cart from \"./pages/Cart\";\nimport Payment from \"./pages/Payment\";\nimport Loader from \"./components/Loader\";\nimport \"./App.scss\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport cartImg from \"./media/cart.svg\";\nimport homeImg from \"./media/home.svg\";\nimport shopImg from \"./media/shop.svg\";\n\nfunction App() {\n  const [beers, setBeers] = useState([]);\n  const [data, setData] = useState({});\n  const [cartItems, setCartItems] = useState([]);\n\n\n\n  function sendPostRequest(order) {\n    //this function is called from Form\n    console.log(\"order from form\", order);\n    postOrder(order, sendMessage);\n  }\n\n  let notificationsCount;\n  if (cartItems.length > 1) {\n    const reducer = (accumulator, currentValue) =>\n      accumulator + currentValue.amount;\n    notificationsCount = cartItems.reduce(reducer, 0);\n  }\n\n  function ratingToggle(name) {\n    //matching the name to the item in map\n    const nextItems = cartItems.map((item) => {\n      if (item.name === name) {\n        // chacking if the star is false, if it is, set it to true, else set it to false\n        !item.isStar ? (item.isStar = true) : (item.isStar = false);\n      }\n      return item;\n    });\n\n    console.log(nextItems, \"nextItem\");\n    setCartItems(nextItems);\n  }\n\n  function editCartItems(name, modifier) {\n    const nextItems = cartItems.map((item) => {\n      if (item.name === name) {\n        item.amount += modifier;\n      }\n      return item;\n    });\n    setCartItems(nextItems);\n  }\n\n  function sendMessage() {\n    console.log(\"sucsesssssssssssssssssssssssssssssssss\");\n  }\n\n  useEffect(() => {\n    getData(setData, setCartItems);\n    getBeers(setBeers);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"nav\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">\n                  <img className=\"homeImg\" src={homeImg} alt=\"homeImg\" />\n                  <p>Home</p>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/shop\">\n                  <img className=\"shopImg\" src={shopImg} alt=\"shopImg\" />\n                  <p>Shop</p>\n                </Link>\n              </li>\n              <li>\n                <Link to=\"/cart\">\n                  <img className=\"cartImg\" src={cartImg} alt=\"cart\" />\n\n                  <p>Cart</p>\n                </Link>\n              </li>\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route path=\"/payment\">\n              <Payment\n               notificationsCount={notificationsCount}\n                sendPostRequest={sendPostRequest}\n                cartItems={cartItems}\n              />\n            </Route>\n            <Route path=\"/shop\">\n              <Shop\n                notificationsCount={notificationsCount}\n                data={data}\n                beers={beers}\n                cartItems={cartItems}\n                editCartItems={editCartItems}\n                ratingToggle={ratingToggle}\n              />\n            </Route>\n            <Route path=\"/cart\">\n              <Cart\n                notificationsCount={notificationsCount}\n                data={data}\n                beers={beers}\n                cartItems={cartItems}\n                editCartItems={editCartItems}\n                sendPostRequest={sendPostRequest}\n              />\n            </Route>\n            <Route path=\"/\">\n              <Home\n                data={data}\n                beers={beers}\n                cartItems={cartItems}\n                editCartItems={editCartItems}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["17","18"],"/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/components/Form.js",[],"/Users/daniel/Desktop/Exam-Project/FooBarCodes/foobar-app/src/components/CartList.js",["19","20"],{"ruleId":"21","severity":1,"message":"22","line":7,"column":8,"nodeType":"23","messageId":"24","endLine":7,"endColumn":14},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"21","severity":1,"message":"29","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":25},{"ruleId":"21","severity":1,"message":"30","line":3,"column":10,"nodeType":"23","messageId":"24","endLine":3,"endColumn":18},"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"'useState' is defined but never used.","'getBeers' is defined but never used.","no-global-assign","no-unsafe-negation"]